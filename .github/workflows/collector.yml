name: Telegram Collector
on:
  schedule:
    - cron: "*/5 * * * *"   # m·ªói 5 ph√∫t (UTC)
  workflow_dispatch:

jobs:
  collect:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          pip install -r requirements.txt

      # üëâ STEP 1: Debug xem secret c√≥ ƒë∆∞·ª£c b∆°m v√†o env ch∆∞a
      - name: Debug env names
        run: |
          python - <<'PY'
          import os
          keys = ['BOT_TOKEN','GROUP_ID','AIRTABLE_TOKEN','AIRTABLE_BASE_ID','AIRTABLE_TABLE_MESSAGES','AIRTABLE_TABLE_META']
          for k in keys:
              print(k, '=>', 'OK' if os.getenv(k) else 'MISSING')
          PY

      # üëâ STEP 2: Sanity check quy·ªÅn Airtable v·ªõi b·∫£ng Meta
      - name: Sanity check Airtable access
        env:
          AIRTABLE_TOKEN: ${{ secrets.AIRTABLE_TOKEN }}
          AIRTABLE_BASE_ID: ${{ secrets.AIRTABLE_BASE_ID }}
        run: |
          curl -s -o /dev/null -w "HTTP %{http_code}\n" \
            -H "Authorization: Bearer $AIRTABLE_TOKEN" \
            "https://api.airtable.com/v0/$AIRTABLE_BASE_ID/Meta?pageSize=1"

      - name: Run collector
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          GROUP_ID: ${{ secrets.GROUP_ID }}
          AIRTABLE_TOKEN: ${{ secrets.AIRTABLE_TOKEN }}
          AIRTABLE_BASE_ID: ${{ secrets.AIRTABLE_BASE_ID }}
          AIRTABLE_TABLE_MESSAGES: ${{ secrets.AIRTABLE_TABLE_MESSAGES }}
          AIRTABLE_TABLE_META: ${{ secrets.AIRTABLE_TABLE_META }}
          MODE: collect
        run: |
          python bot.py
